version: "3.8"

networks:
  mynet:

services:

  frontend-app:
    build:
      context: frontend-app-service/

    networks:
      - mynet

    ports:
      - "3000:3000"

  postgres:
    image: postgres:13.3

    environment:
      POSTGRES_DB: "blog-db"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"

    volumes:
      - ./schema/000001_init.up.sql:/docker-entrypoint-initdb.d/000001_init.up.sql

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d blog-db" ]
      interval: 5s
      timeout: 5s
      retries: 10

    networks:
      - mynet


    ports:
      - "5432:5432"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: exporter
    hostname: exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"

  grafana:
    image: grafana/grafana:8.1.2
    container_name: grafana
    ports:
      - '3000:3000'

  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager/
    ports:
      - '9093:9093'

  auth:
    build: auth/

    environment:
      DBPORT: "5432"
      DBUSERNAME: "admin"
      DBPASSWORD: "admin"
      DBHOST: "postgres"
      DBNAME: "blog-db"
      SSLMODE: "disable"
      PORT: "8000"
      PROBES_PORT: "3010"

    depends_on:
      postgres:
        condition: service_healthy

    networks:
      - mynet

    ports:
      - "8000:8000"
      - "9000:9000"

  posts:
    build: posts/

    environment:
      DBPORT: "5432"
      DBUSERNAME: "admin"
      DBPASSWORD: "admin"
      DBHOST: "postgres"
      DBNAME: "blog-db"
      SSLMODE: "disable"
      PORT: "8036"
      PROBES_PORT: "3014"

    networks:
      - mynet

    depends_on:
      postgres:
        condition: service_healthy

    ports:
      - "8036:8036"

  comms:
    build: comms/

    environment:
      DBPORT: "5432"
      DBUSERNAME: "admin"
      DBPASSWORD: "admin"
      DBHOST: "postgres"
      DBNAME: "blog-db"
      SSLMODE: "disable"
      PORT: "8032"
      PROBES_PORT: "3012"

    networks:
      - mynet

    depends_on:
      postgres:
        condition: service_healthy

    ports:
      - "8032:8032"

  group:
    build: group/

    environment:
      DBPORT: "5432"
      DBUSERNAME: "admin"
      DBPASSWORD: "admin"
      DBHOST: "postgres"
      DBNAME: "blog-db"
      SSLMODE: "disable"
      PORT: "8050"
      PROBES_PORT: "3013"

    networks:
      - mynet

    depends_on:
      postgres:
        condition: service_healthy

    ports:
      - "8050:8050"

  chat:
    build: chat/

    environment:
      CHAT_PORT: "8040"
      PROBES_PORT: "3011"

    networks:
      - mynet

    ports:
      - "8040:8040"
